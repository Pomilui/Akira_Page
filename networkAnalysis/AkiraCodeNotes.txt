This is my xquery in a set of stages to go over how to retrieve the data 
for the Network Analysis. At the bottom of the document is the xquery 
that saves to eXistDB

Mark Raschiatore

xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
return $peeps


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
return $match


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who = $p)]/@who/string()
return $otherPeeps


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who = $p)]/@who/string()
let $distOPS := distinct-values($otherPeeps)
return $distOPS


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who=$p)]/@who/string()
let $distOPS := distinct-values($otherPeeps)
let $countOP := count($distOPS)
let $edge := "controlScene"
for $d in $distOPS
return $countOP


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who=$p)]/@who/string()
let $distOPS := distinct-values($otherPeeps)
let $countOP := count($distOPS)
let $edge := "controlScene"
for $d in $distOPS
return 
    concat($p, "&#x9;", $edge, "&#x9;", $countOP, "&#x9;", $d)


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";

string-join(
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who=$p)]/@who/string()
let $distOPS := distinct-values($otherPeeps)
let $countOP := count($distOPS)
let $edge := "controlScene"
for $d in $distOPS
return 
    concat($p, "&#x9;", $edge, "&#x9;", $countOP, "&#x9;", $d), "&#10;")


xquery version "3.1";
declare default element namespace "http://www.tei-c.org/ns/1.0";
declare variable $ThisFileContent :=
string-join(
let $akira := doc('/db/akira/akira-tei.xml')/*
let $controlScenes := $akira//spGrp
for $i in $controlScenes
let $peeps := $i/sp/@who/string()
let $distinctPeeps := distinct-values($peeps)
for $p in $distinctPeeps
let $match := $controlScenes[sp[@who = $p]]
let $otherPeeps := $match//sp[not(@who=$p)]/@who/string()
let $distOPS := distinct-values($otherPeeps)
let $countOP := count($distOPS)
let $edge := "controlScene"
for $d in $distOPS
return 
    concat($p, "&#x9;", $edge, "&#x9;", $countOP, "&#x9;", $d), "&#10;");
    
    let $filename := "AkiraNetData.tsv"
let $doc-db-uri := xmldb:store("/db/akira/", $filename, $ThisFileContent, "text/plain")
return $doc-db-uri
(: output at :http://newtfire.org:8338/exist/rest/db/akira/AkiraNetData.tsv ) :)  